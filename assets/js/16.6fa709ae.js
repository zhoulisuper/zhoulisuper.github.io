(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{202:function(n,i,t){"use strict";t.r(i);var s=t(0),l=Object(s.a)({},function(){var n=this.$createElement,i=this._self._c||n;return i("div",{staticClass:"content"},[this._m(0),this._v(" "),this._m(1),this._v(" "),this._m(2),this._v(" "),i("Valine")],1)},[function(){var n=this.$createElement,i=this._self._c||n;return i("div",{staticClass:"tip custom-block"},[i("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),i("p",[this._v("nginx 常用命令汇总")])])},function(){var n=this.$createElement,i=this._self._c||n;return i("h1",{attrs:{id:"nginx-常用命令汇总"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#nginx-常用命令汇总","aria-hidden":"true"}},[this._v("#")]),this._v(" nginx 常用命令汇总")])},function(){var n=this,i=n.$createElement,t=n._self._c||i;return t("ul",[t("li",[n._v("start nginx\n"),t("ul",[t("li",[n._v("windows 下再对应 nginx 目录下")]),n._v(" "),t("li",[n._v("CMD 启动 nginx")])])]),n._v(" "),t("li",[n._v("ps aux | grep nginx\n"),t("ul",[t("li",[n._v("查看 nginx 是否启动")])])]),n._v(" "),t("li",[n._v("systemctl start nginx.service\n"),t("ul",[t("li",[n._v("从新启动 nginx")])])]),n._v(" "),t("li",[n._v("nginx -s quit\n"),t("ul",[t("li",[n._v("从容停止 nginx")])])]),n._v(" "),t("li",[n._v("nginx -s stop\n"),t("ul",[t("li",[n._v("立即停止 nginx")])])]),n._v(" "),t("li",[n._v("killall nginx\n"),t("ul",[t("li",[n._v("杀死 nginx 进程")])])]),n._v(" "),t("li",[n._v("systemctl stop nginx.service\n"),t("ul",[t("li",[n._v("systemctl 关闭 nginx 进程(linux 通用关闭 nginx 方法)")])])]),n._v(" "),t("li",[n._v("systemctl restart nginx.service\n"),t("ul",[t("li",[n._v("重启 nginx")])])]),n._v(" "),t("li",[n._v("nginx -s reload\n"),t("ul",[t("li",[n._v("重载配置文件")]),n._v(" "),t("li",[n._v("注：每次修改完.conf 文件就需要重启 nginx")])])]),n._v(" "),t("li",[n._v("nginx -t\n"),t("ul",[t("li",[n._v("检查配置")]),n._v(" "),t("li",[n._v("检查修改的 nginx.conf 配置是否正确")]),n._v(" "),t("li",[n._v("如果出现下面 ok 和 successfull 就代表正确了，其他的都不对"),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[n._v("  nginx: the configuration "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("file")]),n._v(" /usr/local/etc/nginx/nginx.conf syntax is ok\n  nginx: configuration "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("file")]),n._v(" /usr/local/etc/nginx/nginx.conf "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("test")]),n._v(" is successful\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])])])])]),n._v(" "),t("li",[n._v('tasklist /fi "imagename eq nginx.exe"\n'),t("ul",[t("li",[n._v("查看 nginx 项目内启动配置")]),n._v(" "),t("li",[n._v("如果出现：信息：没有运行的任务匹配指定标准 说明没有启动 nginx 配置")])])]),n._v(" "),t("li",[n._v("netstat -tlnp\n"),t("ul",[t("li",[n._v("查看哪些端口号被占用了")])])]),n._v(" "),t("li",[n._v("netstat -aon | findstr :80\n"),t("ul",[t("li",[n._v("查看某端口号是否被占用，如果 nginx 启动不起来，可能是端口号被占用导致。")])])])])}],!1,null,null,null);i.default=l.exports}}]);